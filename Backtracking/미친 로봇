#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Sun Sep 11 22:09:58 2022

@author: kimsubin
"""

import sys
input = lambda: sys.stdin.readline().rstrip()
print = lambda x: sys.stdout.write(str(x) + "\n")

dx, dy = [-1, 0, 1, 0], [0, 1, 0, -1]


def dfs(x, y, number, p):
    global ans

    if number == n:
        ans += p
        return

    for i in range(4):
        nx, ny = x + dx[i], y + dy[i]

        if arrays[nx][ny]:
            continue
        
        if not 0 <= nx < (2 * n) + 1 or not 0 <= ny < (2 * n) + 1:
            continue

        arrays[nx][ny] = 1
        
        dfs(nx, ny, number + 1, p * location[i] * 0.01)
        
        arrays[nx][ny] = 0


n, east, west, south, north = map(int, input().split())
location = [north, east, south, west]   

arrays = [[0] * (2 * n + 1) for _ in range(2 * n + 1)]
arrays[n][n] = 1

ans = 0

dfs(n, n, 0, 1)
print(ans)

